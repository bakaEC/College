文件上传解析漏洞靶场：

1.前端验证绕过（前端验证=没有验证） 我们要上传php文件 题目只允许jpg，png，gif 所以先上传一个jpg文件然后抓包修改为php就行了

2.Content-Type方式绕过 这题也是和第一题类似 但是这是后端验证 虽然方法是一样的 都是抓包修改 但是验证方式不同

3.黑名单绕过 （黑名单就是只要是名单上的都不允许） 此题不允许asp aspx php jsp文件上传 但是这个考虑不够严谨 
	因为在默认状态下php3 php4 php5 phtml都会被解析为php的
	同理 jspx jspf 会被解析为jsp
	 	asa cer aspx 会被解析为asp
	 	exee 会被解析为exe

4..htaccess文件绕过  AddType application/x-httpd-php .jpg  这个指令代表着.jpg文件会当做php来解析
	创建一个后缀为.htaccess的文件 将代码写进去

5.大小写绕过 此题可以查看源码 找到没有被拦截的写入方式 比如PhP5 实战情况下或者黑盒测试就要通过不断的尝试 渗透测试嘛 就是多尝试

6.文件后缀（空）绕过 文件名后面留一个空格然后上传上去空格会自动省略掉 虽然看起来一样 但实际上确实不同的 例如php与php 当然不一样

7.文件后缀（点）绕过 文件名后面留一个.然后上传上去.会自动省略掉

8.::$DATA(Windows文件流)绕过 和上面两个原理都很像 就是写与没写差别不大 但是检测时就是两个东西 例如a.txt与a.txt::$DATA都一样 只不过::$DATA是默认不修改文件流

9.构造文件后缀绕过 经过前面一系列战斗 开发也成长了 之前的所有方法都失效了 我们可以想办法构造一个后缀php. .（它会默认去除最后一个. 然后首位去空 最后只剩下一个. 回到最初的php.）

10.双写绕过 查看源码可以发现 它把检测到的危险字符替换为空了 意思就是php替换为空了 那我们可以想一想如果pphphp中php被替换为空了 那不直接得到php啦




11.%00截断  此题看源码可知 上传上去的东西它会自动重命名 但是它使用了拼接 我们可以构建任何.php后缀的文件夹(例../upload/xxj.php%00) 然后再%00就可以绕过了

12.%00截断（二）  和上面一题很像的 就是变成了POST方式提交save_path 但是POST方式提交用%00会失效 因为POST传参并不会URL解码 这时我们需要用到抓包工具来修改Hex（../upload/xxj.phpa）若不好快速找到该修改哪里 可以在php后面多写个a a的序号是61 将61修改为00就好啦

13.图片码绕过 写一个木马文件（.txt） 再照一张图片进行合并做成一张图片码 因为上传点必须要求是图片 所以直接上传图片码即可

14.getimagesize图片类型绕过 本题和上次一样 只不过只能上传jpeg png gif 老办法先合成图片码 这次我找了个gif图片 上传成功后记得下载下来 修改后缀为.txt 检查一下里面的木马还有没有

15.php_exif模块图片类型绕过 和上面的大同小异 一样的图片码解决 上传成功后下载下来检查一下木马还在不在 注意：图片码这个东西做好了可以多次使用的 而不是每次都需要重新制作的

16.二次渲染绕过 它会将你上传上去的图片重新渲染一遍 意思就是你写的木马在里面 就会被修改或者删除 推荐二次渲染用动图（gif） 其他的有些复杂哈 先将gif图片进行hex编辑（16进制编辑）从第三行开始写起 二次渲染一般是从五行后面开始修改渲染 头部也会修改的 所以从第三行开始写木马进去 写进去后打开的图片会有点不同 要不颜色变了 要不就是有点坏（只要能以图片形式打开就行） 现在就可以上传再下载 检查木马还在不在就好了

17.条件竞争绕过 本题是先上传移动再检测 使用file_put_contents()函数新建文件并写入内容
<?php file_put_contents('baka.php','<?php eval($_REQUEST[8]);?>')?>
在上传文件还没删除前 访问上传文件 
用burp抓一个跑文件上传的包 再跑一个上传之后php的包 当上传之后的php访问成功的时候就会生成一个新的baka.php的文件

18.和17题一样的

19. move_uploaded_file()截断 这个类似于00截断 但是这不是截的路径 而是上传文件的名字

20.解析漏洞（一）
利用iis6.0的漏洞 由源码可知可上传asa文件 写一个asp一句话木马（网上找）利用图片码的方式将jpg上传上去抓包修改为asa 放包过去然后得到图片上传的地址 访问过去然后用菜刀链接 脚本类型选择asp

21.解析漏洞（二）
本题由源码可知asa cer cdx等都不能用了 但可以用分号截断 xxx.asp;jpg 可以直接修改图片名 不用抓包修改 上传成功用菜刀

22.解析漏洞（三）
这个漏洞就是a.asp文件夹下的所有文件全部会以asp执行 a.asp/1.jpg 后面的1.jpg就会以asp执行 上传成功连菜刀

23.解析漏洞（四）
cgi解析漏洞 iis7.5 Nginx会有   a.jpg/.php 检测到后面的php文件不存在 会把前面的文件当php来解析
上传一个图片码 在后缀加一个/.php 连接菜刀可行
